#labels usage
= Dependency =
This project requires:
  * Apache HTTP Client
    * [http://hc.apache.org/httpcomponents-core Core] | [http://hc.apache.org/httpcomponents-core/httpcore/apidocs/index.html JavaDoc]
    * [http://hc.apache.org/httpcomponents-client/index.html Client] | [http://hc.apache.org/httpcomponents-client/httpclient/apidocs/index.html JavaDoc]
    * Apache Commmons Logging
  * [http://jerichohtml.sourceforge.net Jericho HTML Parser] | [http://jerichohtml.sourceforge.net/doc/api/index.html JavaDoc (2.6)], only if you use it

All libraries could be found under /lib
 
= Concepts =
  * Http
    * mainly provides post() and get() methods, that takes a URI and optional a closure for execution
    * lifecycle methods: reset(), close(), shutdown()
    * Jericho HTML methods: getSource(), getElement(), and @Delegate HttpEntity
    * Form method: getForm()
  * Form
    * provides submit() method, that utilize Http.post() to do submission
    * Jericho HTML methods: @Delegate of the form element

= Usage = 
  * Get a page
    * Sample code:
    {{{
println new Http().get("http://code.google.com/p/groovy-http").text
println new Http().get("http://code.google.com/p/groovy-http").getElement('pname').textExtractor.toString() //print: "groovy-http"
println new Http().get("http://code.google.com/p/groovy-http"){ request, entity, client->
  println entity.contentType
} //print: text/html; charset=UTF-8
println new Http().get("http://code.google.com/p/groovy-http").source //return a Jericho HTML parser Source
}}}
    * text is getText that print out the input stream with StringWriter
    * Http constructor accepts only one parameter 'buffer' (boolean)
      * by default, HttpEntity is wrapped with a BufferedHttpEntity. {{{new Http(buffer:false)}}} disable the buffer. You need to ensure you read the input stream only once if buffer is disabled.
  * get a Form
    * Sample code:
    {{{
def form = new Http().get("http://code.google.com/p/groovy-http/").getForm()

//with constructor
def http = new Http().get("http://code.google.com/p/groovy-http/")
def form = new Form(http, http.source.getAllElements("action","/hosting/search",false)) //there are many ways to get the form element
}}}
    * Http.getForm(params) - if params is null, it get the first form. if params is an Integer, it get the form by index; if it is a string, it get by HTML Element ID
  * Run the test cases to get to know how they work